apiVersion: v1
data:
  test.txt: >
    <clr-textarea-container>
      <label class="clr-col-md-3">{{ 'CLUSTERSMGMT.CREATECLUSTER-PAGE1.CLUSTERDESC' | translate }}</label>
      <textarea class="clr-col-md-9" clrTextarea formControlName="description" type="string" style="width: 150%"></textarea>
    </clr-textarea-container>



    <div style="text-align:center; margin-top: 100px; ">

    <mat-card style="margin-top:10px; width: 50%;">  
            <mat-card-content>
                <ul>
                    <li *ngFor="let file of files">
                        <mat-progress-bar [value]="file.progress"></mat-progress-bar>
                        <span id="file-label">

                        </span>
                    </li>
                </ul>
            </mat-card-content>
            <mat-card-actions>
                <button mat-button color="warn" (click)="onClick()">
                    <mat-icon>file_upload</mat-icon>
                    Upload
                </button>
            </mat-card-actions>
        </mat-card>
        <input type="file" #fileUpload id="fileUpload" name="fileUpload" multiple="multiple" accept="image/*" style="display:none;" />
        </div>



        <button (click)="uploadFile()" class="btn btn-sm btn-outline">
          <clr-icon shape="upload"></clr-icon>
            上传文件-new upload
        </button>
kind: ConfigMap
metadata:
  name: config
  namespace: default
---
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-disk
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: minio
  labels:
    component: minio
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: minio
  template:
    metadata:
      labels:
        component: minio
    spec:
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: data-disk
      - name: config
        emptyDir: {}  
      containers:
      - name: minio
        image: harbor.ocplab.cn/minio/minio:latest
        imagePullPolicy: IfNotPresent
        args:
        - server
        - /storage
        - --config-dir=/config
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
        - name: config
          mountPath: "/config"                 
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: minio
  labels:
    component: minio
spec:
  # ClusterIP is recommended for production environments.
  # Change to NodePort if needed per documentation,
  # but only if you run Minio in a test/trial environment, for example with Minikube.
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    component: minio

---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: default
  name: minio-setup
  labels:
    component: minio
spec:
  template:
    metadata:
      name: minio-setup
    spec:
      restartPolicy: OnFailure
      volumes:
      - name: config
        emptyDir: {}
      containers:
      - name: mc
        image: harbor.ocplab.cn/minio/mc:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - "mc --config-dir=/config config host add velero http://minio:9000 minio minio123 && mc --config-dir=/config mb -p velero/velero"
        volumeMounts:
        - name: config
          mountPath: "/config"
